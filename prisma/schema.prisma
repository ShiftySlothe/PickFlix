// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Show {
  id              Int        @id @default(autoincrement())
  imDbID          String
  rank            String
  title           String
  fullTitle       String
  year            String
  image           String
  crew            String
  imDbRating      String
  imDbRatingCount String
  UserGroup       UserGroup? @relation(fields: [userGroupId], references: [id])
  userGroupId     Int?
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map(name: "users")
  UserGroup   UserGroup? @relation(fields: [userGroupId], references: [id])
  userGroupId Int?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserGroup {
  id    Int    @id @default(autoincrement())
  users User[]
  shows Show[]
}
