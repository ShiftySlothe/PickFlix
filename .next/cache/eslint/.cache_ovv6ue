[{"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\api\\auth\\[...nextauth].ts":"1","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\api\\trpc\\[trpc].ts":"2","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\auth\\signin.tsx":"3","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\dashboard.tsx":"4","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\index.tsx":"5","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\_app.tsx":"6","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\BasicAuth.tsx":"7","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\NavBar\\NavBar.tsx":"8","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\TinderCards.tsx":"9","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\TinderCardsSimple.tsx":"10","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\types.ts":"11","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\addToDb.ts":"12","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\prisma.ts":"13","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\theme.ts":"14","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\about.tsx":"15"},{"size":1385,"mtime":1633540030308,"results":"16","hashOfConfig":"17"},{"size":352,"mtime":1633360138085,"results":"18","hashOfConfig":"17"},{"size":848,"mtime":1633533218356,"results":"19","hashOfConfig":"17"},{"size":273,"mtime":1633538933588,"results":"20","hashOfConfig":"17"},{"size":175,"mtime":1633358585409,"results":"21","hashOfConfig":"17"},{"size":2292,"mtime":1633533519125,"results":"22","hashOfConfig":"17"},{"size":444,"mtime":1632922929551,"results":"23","hashOfConfig":"17"},{"size":1638,"mtime":1633536616927,"results":"24","hashOfConfig":"17"},{"size":3264,"mtime":1633529827592,"results":"25","hashOfConfig":"17"},{"size":1783,"mtime":1633439070172,"results":"26","hashOfConfig":"17"},{"size":1661,"mtime":1633424733579,"results":"27","hashOfConfig":"17"},{"size":581,"mtime":1633514764626,"results":"28","hashOfConfig":"17"},{"size":485,"mtime":1633539880426,"results":"29","hashOfConfig":"17"},{"size":1058,"mtime":1633351363378,"results":"30","hashOfConfig":"17"},{"size":586,"mtime":1633542230123,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"1hrp3hj",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\api\\auth\\[...nextauth].ts",["67","68"],"import NextAuth from 'next-auth';\nimport { PrismaAdapter } from '@next-auth/prisma-adapter';\nimport GithubProvider from 'next-auth/providers/github';\nimport GoogleProvider from 'next-auth/providers/google';\nimport prisma from '../../../lib/prisma';\nimport { Profile } from 'next-auth';\n\nexport default NextAuth({\n  // Configure one or more authentication providers\n  providers: [\n    GithubProvider({\n      clientId: process.env.GITHUB_ID,\n      clientSecret: process.env.GITHUB_SECRET,\n    }),\n    // ...add more providers here\n    GoogleProvider({\n      clientId: process.env.GOOGLE_ID as string,\n      clientSecret: process.env.GOOGLE_SECRET as string,\n    }),\n  ],\n  jwt: {\n    signingKey: process.env.JWT_SIGNING_PRIVATE_KEY,\n  },\n  adapter: PrismaAdapter(prisma),\n  secret: process.env.SECRET,\n  pages: {\n    signIn: '/auth/signin', // Displays signin buttons\n    // signOut: '/auth/signout', // Displays form with sign out button\n    // error: '/auth/error', // Error code passed in query string as ?error=\n    // verifyRequest: '/auth/verify-request', // Used for check email page\n    // newUser: null // If set, new users will be directed here on first sign in\n  },\n  callbacks: {\n    async session({ session, token, user }) {\n      // Send properties to the client, like an access_token from a provider.\n      session.user.id = user.id;\n      return session;\n    },\n  },\n});\n","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\api\\trpc\\[trpc].ts",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\auth\\signin.tsx",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\dashboard.tsx",["69","70"],"import type { NextPage } from 'next';\r\nimport { useEffect } from 'react';\r\nimport Dashboard from '../page-components/Dashboard/Dashboard';\r\nimport { trpc } from '../server/utils/trpc';\r\n\r\nconst Home: NextPage = () => {\r\n  return <Dashboard />;\r\n};\r\n\r\nexport default Home;\r\n","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\index.tsx",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\_app.tsx",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\BasicAuth.tsx",["71"],"import { useSession, signIn, signOut } from 'next-auth/react';\r\n\r\nconst BasicAuth = () => {\r\n  const { data: session } = useSession();\r\n  if (session) {\r\n    return (\r\n      <>\r\n        Signed in as {session?.user?.name} <br />\r\n        <button onClick={() => signOut()}>Sign out</button>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Not signed in <br />\r\n      <button onClick={() => signIn()}>Sign in</button>\r\n    </div>\r\n  );\r\n};\r\n","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\NavBar\\NavBar.tsx",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\TinderCards.tsx",["72","73"],"import { Button, ButtonGroup } from '@chakra-ui/button';\r\nimport { Box, Flex, Heading } from '@chakra-ui/layout';\r\nimport React, { useMemo, useState, useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport { API, Direction } from './types';\r\nimport { Movie } from '.prisma/client';\r\n\r\ninterface TinderCardsProps {\r\n  movies: Movie[];\r\n}\r\n\r\nconst TinderCards = ({ movies: m }: TinderCardsProps) => {\r\n  const alreadyRemoved: Movie[] = [];\r\n  const [movies, setMovies] = useState(m);\r\n  useEffect(() => {\r\n    console.log(movies);\r\n  }, [movies]);\r\n  const [lastDirection, setLastDirection] = useState('');\r\n\r\n  // Create refs for each movie\r\n  const childRefs = useMemo(() => {\r\n    return Array(m.length)\r\n      .fill(0)\r\n      .map((i) => React.createRef<API>());\r\n  }, [m]);\r\n\r\n  const swiped = (direction: Direction, movie: Movie) => {\r\n    console.log('removing: ' + movie.title);\r\n    setLastDirection(direction);\r\n    alreadyRemoved.push(movie);\r\n  };\r\n\r\n  const outOfFrame = (movie: Movie) => {\r\n    console.log(movie.title + ' left the screen!');\r\n    let newMovieState = movies.filter((m) => m.id !== movie.id);\r\n    newMovieState = newMovieState.filter((m) => !alreadyRemoved.includes(m));\r\n    setMovies(newMovieState);\r\n  };\r\n\r\n  const swipe = (dir: Direction) => {\r\n    const moviesLeft = movies?.filter((m) => !alreadyRemoved.includes(m));\r\n    if (moviesLeft?.length) {\r\n      const toBeRemoved = moviesLeft[moviesLeft.length - 1]; // Find the card object to be removed\r\n      const index = m.map((m) => m).indexOf(toBeRemoved); // Find the index of which to make the reference to\r\n      alreadyRemoved.push(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n      childRefs[index].current?.swipe(dir); // Swipe the card!\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Flex flexDir=\"column\" overflow=\"hidden\">\r\n        <Box w=\"90vw\" maxW=\"260px\" h=\"300px\" overflow=\"hidden\">\r\n          {movies?.map((movie, index) => (\r\n            <Box position=\"absolute\" key={movie.id}>\r\n              <TinderCard\r\n                ref={childRefs[index]}\r\n                onSwipe={(dir) => swiped(dir, movie)}\r\n                onCardLeftScreen={() => outOfFrame(movie)}\r\n              >\r\n                <Flex\r\n                  position=\"relative\"\r\n                  backgroundColor=\"white\"\r\n                  backgroundSize=\"cover\"\r\n                  backgroundPosition=\"50%\"\r\n                  borderRadius=\"5px\"\r\n                  width=\"80vw\"\r\n                  maxW=\"260px\"\r\n                  h=\"300px\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Heading p={2} fontSize=\"md\">\r\n                    {movie.title}\r\n                  </Heading>\r\n                </Flex>\r\n              </TinderCard>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n\r\n        <Flex justifyContent=\"center\" mt={3}>\r\n          <ButtonGroup>\r\n            <Button onClick={() => swipe('left')}>Swipe left!</Button>\r\n            <Button onClick={() => swipe('right')}>Swipe right!</Button>\r\n          </ButtonGroup>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TinderCards;\r\n","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\TinderCardsSimple.tsx",["74","75","76","77"],"import { Box, Flex, Heading } from '@chakra-ui/layout';\r\nimport React, { useState } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport { API, Direction, Props } from './types';\r\n\r\nimport { Movie } from '.prisma/client';\r\n\r\ninterface TinderCardsProps {\r\n  movies: Movie[];\r\n}\r\nconst TinderCards = ({ movies }: TinderCardsProps) => {\r\n  const [lastDirection, setLastDirection] = useState('');\r\n\r\n  const swiped = (direction: Direction, movie: Movie) => {\r\n    console.log('removing: ' + movie.title);\r\n    setLastDirection(direction);\r\n  };\r\n\r\n  const outOfFrame = (movie: Movie) => {\r\n    console.log(movie.title + ' left the screen!');\r\n  };\r\n\r\n  return (\r\n    <Box overflow=\"hidden\">\r\n      <Flex flexDir=\"column\" overflow=\"hidden\">\r\n        <Box w=\"90vw\" maxW=\"260px\" h=\"300px\" overflow=\"hidden\">\r\n          {movies?.map((movie, index) => (\r\n            <Box position=\"absolute\" key={movie.id}>\r\n              <TinderCard\r\n                onSwipe={(dir) => swiped(dir, movie)}\r\n                onCardLeftScreen={() => outOfFrame(movie)}\r\n              >\r\n                <Flex\r\n                  position=\"relative\"\r\n                  backgroundColor=\"white\"\r\n                  backgroundSize=\"cover\"\r\n                  backgroundPosition=\"50%\"\r\n                  borderRadius=\"5px\"\r\n                  width=\"80vw\"\r\n                  maxW=\"260px\"\r\n                  h=\"300px\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"center\"\r\n                >\r\n                  <Heading p={2} fontSize=\"md\">\r\n                    {movie.title}\r\n                  </Heading>\r\n                </Flex>\r\n              </TinderCard>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TinderCards;\r\n","C:\\dev\\Polish\\pick-flix\\pickflix\\src\\components\\TinderCard\\types.ts",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\addToDb.ts",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\prisma.ts",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\lib\\theme.ts",[],"C:\\dev\\Polish\\pick-flix\\pickflix\\src\\pages\\about.tsx",["78"],{"ruleId":"79","severity":1,"message":"80","line":6,"column":10,"nodeType":"81","messageId":"82","endLine":6,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":34,"column":30,"nodeType":"81","messageId":"82","endLine":34,"endColumn":35},{"ruleId":"79","severity":1,"message":"84","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":19},{"ruleId":"79","severity":1,"message":"85","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"86","line":3,"column":7,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"87","line":18,"column":10,"nodeType":"81","messageId":"82","endLine":18,"endColumn":23},{"ruleId":"79","severity":1,"message":"88","line":24,"column":13,"nodeType":"81","messageId":"82","endLine":24,"endColumn":14},{"ruleId":"79","severity":1,"message":"89","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":13},{"ruleId":"79","severity":1,"message":"90","line":4,"column":26,"nodeType":"81","messageId":"82","endLine":4,"endColumn":31},{"ruleId":"79","severity":1,"message":"87","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":23},{"ruleId":"79","severity":1,"message":"91","line":27,"column":32,"nodeType":"81","messageId":"82","endLine":27,"endColumn":37},{"ruleId":"79","severity":1,"message":"92","line":11,"column":3,"nodeType":"81","messageId":"82","endLine":11,"endColumn":53},"@typescript-eslint/no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'token' is defined but never used.","'useEffect' is defined but never used.","'trpc' is defined but never used.","'BasicAuth' is assigned a value but never used.","'lastDirection' is assigned a value but never used.","'i' is defined but never used.","'API' is defined but never used.","'Props' is defined but never used.","'index' is defined but never used.","'context' is defined but never used."]